---
import { cn } from "../../../utils/class-name";
import { type IExperience } from "../../../models/experience";
import stringPreprocessor from "../../../utils/string-preprocessor";
import InteractiveImage from "../InteractiveImage.astro";
import imageReader from "../../../utils/image-reader";

interface Props {
  isLast?: boolean;
  data: IExperience;
}

const { isLast = false, data } = Astro.props;

const processedDescription = data.description.map(stringPreprocessor).join("");
---

<li
  class={cn(
    isLast ? "" : "after:h-[calc(100%-2.9rem)]",
    "relative h-fit after:absolute after:left-6 after:top-[4.4rem] after:mt-px after:w-px after:bg-fill-primary",
  )}>
  <div class="flex items-start justify-start gap-8 py-6">
    <span
      class="me-3 flex aspect-square h-12 min-h-12 w-12 min-w-12 items-center justify-center rounded-full border-[1.5px] border-primary bg-fill-primary bg-opacity-40 text-sm text-white">
    </span>
    <section class="flex flex-col gap-8 pb-8 pt-2">
      <header class="flex flex-col gap-2">
        <h2 class="text-2xl font-bold text-white">{data.date}</h2>
        <h2 class="text-2xl font-bold text-white">{data.title}</h2>
      </header>
      <div
        class="text-base text-white"
        set:html={processedDescription}
      />
      <div class="flex gap-8 py-4">
        {
          data.imageUrls.map((image) => {
            return (
              <div class="flex flex-col items-start justify-center gap-2">
                <InteractiveImage
                  class="cursor-pointer rounded-3xl object-cover transition-transform hover:scale-[102%]"
                  width={250}
                  height={50}
                  rawSrc={image.src}
                  src={imageReader(image.src)!}
                  alt={image.alt}
                />
                <span class="text-base text-white text-opacity-50">{image.description}</span>
              </div>
            );
          })
        }
      </div>
    </section>
  </div>
</li>
